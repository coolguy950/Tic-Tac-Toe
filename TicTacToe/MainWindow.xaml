<Window x:Class="TicTacToe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TicTacToe"
        xmlns:models="clr-namespace:TicTacToe.Models"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:viewModels="clr-namespace:TicTacToe.ViewModels"
        xmlns:converters="clr-namespace:TicTacToe.Converters"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        mc:Ignorable="d"
        Title="Tic Tac Toe" Height="515" Width="420" ResizeMode="NoResize">
    
        <dxmvvm:Interaction.Behaviors>
            <dx:DXMessageBoxService/>
            <!--<dxmvvm:EnumItemsSourceBehavior EnumType="{x:Type viewModels:FieldSize}" SortMode="DisplayName"/>-->
        </dxmvvm:Interaction.Behaviors>

    <Window.Resources>

       
        <ItemsPanelTemplate x:Key="FieldPanelTemplate">
            <UniformGrid IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="CellTemplate">
            <Button Style="{DynamicResource CellStyle}" Command="{Binding DataContext.OnMoveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    CommandParameter="{Binding }"/>
        </DataTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <Style x:Key="CellStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Gainsboro"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFC9C9C9"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding State}" Value="{x:Static models:State.Player1}">
                    <Setter Property="Content" Value="X"/>
                    <Setter Property="FontFamily" Value="Futura"/>
                    <Setter Property="FontSize" Value="28"/>
                    <Setter Property="FontWeight" Value="Light"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding State}" Value="{x:Static models:State.Player2}">
                    <Setter Property="Content" Value="O"/>
                    <Setter Property="FontFamily" Value="Futura"/>
                    <Setter Property="FontSize" Value="28"/>
                    <Setter Property="FontWeight" Value="Light"/>
                    <Setter Property="Foreground" Value="Gray"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsWinningCell}" Value="True">
                    <Setter Property="Background" Value="GreenYellow"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <DockPanel Margin="11">
        <StackPanel DockPanel.Dock="Bottom">
            <Button Content="New Game" Command="{Binding NewGameCommand}"/>
            <TextBlock/>
            <dxe:ComboBoxEdit EditValue="{Binding FieldSize, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False"
                              ItemsSource="{dxe:EnumItemsSource EnumType=viewModels:FieldSize}" />
        </StackPanel>
        <TextBlock Text="{Binding CurrentPlayer, StringFormat=Current Turn: {0}}" DockPanel.Dock="Top" FontFamily="Helvetica"
                   FontWeight="ExtraLight" FontSize="18" Visibility="{Binding CurrentPlayer, Converter={converters:StateToVisiblityConverter}}"/>
        <ItemsControl Margin="0,7" ItemsSource="{Binding Field}" ItemsPanel="{DynamicResource FieldPanelTemplate}" ItemTemplate="{DynamicResource CellTemplate}"/>
    </DockPanel>
</Window>
